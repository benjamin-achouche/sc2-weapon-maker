{"version":3,"sources":["weapons/pages/ViewWeapon.js"],"names":["ViewWeapon","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedWeapon","setLoadedWeapon","weaponId","useParams","useWeapon","attack","defense","speed","selfGuardPiercing","enemyGuardPiercing","reach","counters","enemyDamageReflection","lifeContinuous","lifeHit","lifeVampire","lessHealthMoreAttack","lessHealthMoreDefense","lessHealthMoreSpeed","lessHealthMoreLifeCont","lessHealthSCLvUp","SCAttack","SCDefense","SCSpeed","SCEnemyGuardPiercing","SCLifeContinuous","SCChargeSpeed","SCType","weaponState","setLevelHandler","setWeaponData","useEffect","a","process","responseData","weapon","attributes","points","fetchWeapon","Fragment","to","className","asDarkOverlay","big","weaponView","idCount","isSC","attribute","weaponAttributes","push","id","name","Object","keys","length","map","attr","image","attributeValue","attrValues","currentLevel","levels","tooltip","lvlPtsCost","onClick","initialAttributes","initialPoints","viewOnly","onClear"],"mappings":"+OAoKeA,UAvJI,WAAO,IAAD,EAC+BC,cAA9CC,EADe,EACfA,UAAWC,EADI,EACJA,MAAOC,EADH,EACGA,YAAaC,EADhB,EACgBA,WADhB,EAEiBC,mBAAS,IAF1B,mBAEhBC,EAFgB,KAEFC,EAFE,KAGjBC,EAAWC,cAAYD,SAHN,EAK+BE,YACpD,CACEC,OAAQ,EACRC,QAAS,EACTC,MAAO,EACPC,kBAAmB,EACnBC,mBAAoB,EACpBC,MAAO,EACPC,SAAU,EACVC,sBAAuB,EACvBC,eAAgB,EAChBC,QAAS,EACTC,YAAa,EACbC,qBAAsB,EACtBC,sBAAuB,EACvBC,oBAAqB,EACrBC,uBAAwB,EACxBC,iBAAkB,EAClBC,SAAU,EACVC,UAAW,EACXC,QAAS,EACTC,qBAAsB,EACtBC,iBAAkB,EAClBC,cAAe,EACfC,OAAQ,GAEV,KA/BqB,mBAKhBC,EALgB,KAKHC,EALG,KAKcC,EALd,KAkDvB,GAhBAC,qBAAU,YACS,uCAAG,4BAAAC,EAAA,+EAEWnC,EAAY,GAAD,OACjCoC,6CADiC,oBACY/B,IAHlC,OAEVgC,EAFU,OAKhBjC,EAAgBiC,EAAaC,QAC7BL,EACEI,EAAaC,OAAOC,WACpBF,EAAaC,OAAOE,QARN,yGAAH,qDAYjBC,KACC,CAACzC,EAAaK,EAAU4B,IAEvBnC,EACF,OACE,eAAC,IAAM4C,SAAP,WACE,cAAC,IAAD,CAAQC,GAAG,MAAMC,UAAU,yBAA3B,kBAGA,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAgBC,eAAa,EAACC,KAAG,SAMzC,IAgBIC,EAhBER,EAAa,GACfS,EAAU,EACVC,GAAO,EAEX,IAAK,IAAMC,KAAaC,MACtBH,EACc,KACZC,GAAO,GAETV,EAAWa,KAAK,CACdC,GAAIL,EACJM,KAAMJ,EACND,KAAMA,IAiEV,MA3D4B,kBAAjB9C,GAA8BJ,GACnCwD,OAAOC,KAAKrD,GAAcsD,OAAS,IACrCV,EACE,eAAC,IAAML,SAAP,WACE,qBAAKE,UAAU,uBACf,qBAAKA,UAAU,aAAf,SACGL,EAAWmB,KAAI,SAACC,GAAD,OACbA,EAAKV,KAuBJ,cAAC,IAAD,CAEEI,GAAIM,EAAKN,GACTJ,KAAMU,EAAKV,KACXK,KAAMH,IAAiBQ,EAAKL,MAAMA,KAClCM,MAAOT,IAAiBQ,EAAKL,MAAMM,MACnCC,eACEV,IAAiBQ,EAAKL,MAAMO,eAC1B9B,EAAYQ,WAAWoB,EAAKL,MAAQ,GAGxCQ,WAAYX,IAAiBQ,EAAKL,MAAMO,eACxCE,aAAchC,EAAYQ,WAAWoB,EAAKL,MAC1CU,OAAQb,IAAiBQ,EAAKL,MAAMU,OACpCC,QAASd,IAAiBQ,EAAKL,MAAMW,QACrCC,WAAYf,IAAiBQ,EAAKL,MAAMY,WACxCC,QAASnC,EACToC,kBAAmBrC,EAAYQ,WAAWoB,EAAKL,MAC/Ce,cAAetC,EAAYS,OAC3B8B,UAAU,GAlBL,aAAenB,IAAiBQ,EAAKL,MAAMA,eA6B9D,eAAC,IAAMZ,SAAP,WACE,cAAC,IAAD,CAAY3C,MAAOA,EAAOwE,QAAStE,IACnC,cAAC,IAAD,CAAQ0C,GAAG,MAAMC,UAAU,yBAA3B,kBAGCG","file":"static/js/10.33eaa9a4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport Attribute from '../../shared/components/WeaponUIElements/Attribute';\r\nimport weaponAttributes from '../util/weaponAttributes';\r\nimport { useWeapon } from '../../shared/hooks/weapon-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nimport './WeaponForm.css';\r\n\r\nconst ViewWeapon = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedWeapon, setLoadedWeapon] = useState('');\r\n  const weaponId = useParams().weaponId;\r\n\r\n  const [weaponState, setLevelHandler, setWeaponData] = useWeapon(\r\n    {\r\n      attack: 4,\r\n      defense: 4,\r\n      speed: 3,\r\n      selfGuardPiercing: 7,\r\n      enemyGuardPiercing: 1,\r\n      reach: 2,\r\n      counters: 2,\r\n      enemyDamageReflection: 1,\r\n      lifeContinuous: 4,\r\n      lifeHit: 4,\r\n      lifeVampire: 1,\r\n      lessHealthMoreAttack: 1,\r\n      lessHealthMoreDefense: 1,\r\n      lessHealthMoreSpeed: 1,\r\n      lessHealthMoreLifeCont: 1,\r\n      lessHealthSCLvUp: 1,\r\n      SCAttack: 1,\r\n      SCDefense: 1,\r\n      SCSpeed: 3,\r\n      SCEnemyGuardPiercing: 1,\r\n      SCLifeContinuous: 3,\r\n      SCChargeSpeed: 3,\r\n      SCType: 2,\r\n    },\r\n    100\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchWeapon = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/weapons/${weaponId}`\r\n        );\r\n        setLoadedWeapon(responseData.weapon);\r\n        setWeaponData(\r\n          responseData.weapon.attributes,\r\n          responseData.weapon.points\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchWeapon();\r\n  }, [sendRequest, weaponId, setWeaponData]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <React.Fragment>\r\n        <Button to=\"../\" className=\"new-weapon__create-btn\">\r\n          Back\r\n        </Button>\r\n        <div className=\"center\">\r\n          <LoadingSpinner asDarkOverlay big />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  const attributes = [];\r\n  let idCount = 0;\r\n  let isSC = false;\r\n\r\n  for (const attribute in weaponAttributes) {\r\n    idCount++;\r\n    if (idCount > 16) {\r\n      isSC = true;\r\n    }\r\n    attributes.push({\r\n      id: idCount,\r\n      name: attribute,\r\n      isSC: isSC,\r\n    });\r\n  }\r\n\r\n  let weaponView;\r\n\r\n  if (typeof loadedWeapon !== 'string' && !error) {\r\n    if (Object.keys(loadedWeapon).length > 0) {\r\n      weaponView = (\r\n        <React.Fragment>\r\n          <div className=\"new-weapon__points\"></div>\r\n          <div className=\"new-weapon\">\r\n            {attributes.map((attr) =>\r\n              !attr.isSC ? (\r\n                <Attribute\r\n                  key={'Attribute ' + weaponAttributes[attr.name].name}\r\n                  id={attr.id}\r\n                  isSC={attr.isSC}\r\n                  name={weaponAttributes[attr.name].name}\r\n                  image={weaponAttributes[attr.name].image}\r\n                  attributeValue={\r\n                    weaponAttributes[attr.name].attributeValue[\r\n                      weaponState.attributes[attr.name] - 1\r\n                    ]\r\n                  }\r\n                  attrValues={weaponAttributes[attr.name].attributeValue}\r\n                  currentLevel={weaponState.attributes[attr.name]}\r\n                  levels={weaponAttributes[attr.name].levels}\r\n                  tooltip={weaponAttributes[attr.name].tooltip}\r\n                  lvlPtsCost={weaponAttributes[attr.name].lvlPtsCost}\r\n                  onClick={setLevelHandler}\r\n                  initialAttributes={weaponState.attributes[attr.name]}\r\n                  initialPoints={weaponState.points}\r\n                  viewOnly={true}\r\n                />\r\n              ) : (\r\n                <Attribute\r\n                  key={'Attribute ' + weaponAttributes[attr.name].name}\r\n                  id={attr.id}\r\n                  isSC={attr.isSC}\r\n                  name={weaponAttributes[attr.name].name}\r\n                  image={weaponAttributes[attr.name].image}\r\n                  attributeValue={\r\n                    weaponAttributes[attr.name].attributeValue[\r\n                      weaponState.attributes[attr.name] - 1\r\n                    ]\r\n                  }\r\n                  attrValues={weaponAttributes[attr.name].attributeValue}\r\n                  currentLevel={weaponState.attributes[attr.name]}\r\n                  levels={weaponAttributes[attr.name].levels}\r\n                  tooltip={weaponAttributes[attr.name].tooltip}\r\n                  lvlPtsCost={weaponAttributes[attr.name].lvlPtsCost}\r\n                  onClick={setLevelHandler}\r\n                  initialAttributes={weaponState.attributes[attr.name]}\r\n                  initialPoints={weaponState.points}\r\n                  viewOnly={true}\r\n                />\r\n              )\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Button to=\"../\" className=\"new-weapon__create-btn\">\r\n        Back\r\n      </Button>\r\n      {weaponView}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewWeapon;\r\n"],"sourceRoot":""}