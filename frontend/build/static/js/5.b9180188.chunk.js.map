{"version":3,"sources":["shared/util/validators.js","shared/components/UIElements/Card.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","users/pages/Auth.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","Card","props","className","style","children","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialTouch","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","resize","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","Button","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","console","log","login","userId","token","formData","FormData","append","name","image","Fragment","ErrorModal","onClear","LoadingSpinner","asClearOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/5.b9180188.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: props.initialTouch || false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={props.value || inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        style={{ resize: 'none' }}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      inputId: id,\r\n      value: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      if (fileIsValid) {\r\n        return;\r\n      }\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_MAXLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        );\r\n        console.log('HELLO');\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          'POST',\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asClearOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(10)]}\r\n              errorText=\"Please enter a name, at most 10 characters long.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload center id=\"image\" onInput={inputHandler} />\r\n          )}\r\n\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            element=\"input\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            element=\"input\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}