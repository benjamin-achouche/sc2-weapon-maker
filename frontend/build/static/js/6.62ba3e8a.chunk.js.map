{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","size","height","UserItem","id","padding","to","process","name","weaponCount","UsersList","items","length","map","user","weapons","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","auth","useContext","AuthContext","useEffect","a","responseData","users","fetchUsers","userId","Fragment","ErrorModal","onClear","LoadingSpinner","asDarkOverlay","big"],"mappings":"qGAAA,sBAYeA,IARF,SAACC,GACZ,OACE,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,a,qMCSEC,EAZA,SAACJ,GACd,OACE,qBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,SACE,qBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMS,KAAMC,OAAQV,EAAMS,W,QCqBnCE,G,MAxBE,SAACX,GAChB,OACE,oBAAIC,UAAU,YAAYW,GAAIZ,EAAMY,GAApC,SACE,cAACb,EAAA,EAAD,CAAMG,MAAO,CAAEW,QAAS,GAAxB,SACE,eAAC,IAAD,CAAMC,GAAE,WAAMd,EAAMY,GAAZ,YAAR,UACE,qBAAKX,UAAU,mBAAf,SACE,cAAC,EAAD,CACEK,MAAK,UAAKS,yCAAL,YAAwCf,EAAMM,OACnDC,IAAKP,EAAMgB,SAIf,sBAAKf,UAAU,kBAAf,UACE,6BAAKD,EAAMgB,OACX,+BACGhB,EAAMiB,YADT,IACuBjB,EAAMiB,YAAc,EAAI,UAAY,SAAU,mBCUlEC,G,MA1BG,SAAClB,GACjB,OAA2B,IAAvBA,EAAMmB,MAAMC,OAEZ,qBAAKnB,UAAU,SAAf,SACE,cAACF,EAAA,EAAD,UACE,qDAON,oBAAIE,UAAU,aAAd,SACGD,EAAMmB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEV,GAAIU,EAAKV,GACTN,MAAOgB,EAAKhB,MACZU,KAAMM,EAAKN,KACXC,YAAaK,EAAKC,QAAQH,QAJrBE,EAAKV,W,gCCkBLY,UA/BD,WAAO,IAAD,EACoCC,cAA9CC,EADU,EACVA,UAAWC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,WADrB,EAEoBC,qBAFpB,mBAEXC,EAFW,KAEEC,EAFF,KAGZC,EAAOC,qBAAWC,KAexB,OAbAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYT,EAAY,GAAD,OACjCb,6CADiC,WAFvB,OAETuB,EAFS,OAMfN,EAAeM,EAAaC,OANb,uGAAH,qDAShBC,KACC,CAACZ,EAAaK,EAAKQ,SAGpB,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CAAYhB,MAAOA,EAAOiB,QAASf,IAClCH,GACC,qBAAKzB,UAAU,SAAf,SACE,cAAC4C,EAAA,EAAD,CAAgBC,eAAa,EAACC,KAAG,OAGnCrB,GAAaK,GAAe,cAAC,EAAD,CAAWZ,MAAOY","file":"static/js/6.62ba3e8a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = (props) => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.size, height: props.size }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\" id={props.id}>\r\n      <Card style={{ padding: 0 }}>\r\n        <Link to={`/${props.id}/weapons`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.weaponCount} {props.weaponCount > 1 ? 'Weapons' : 'Weapon'}{' '}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          weaponCount={user.weapons.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const auth = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest, auth.userId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asDarkOverlay big />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}