{"version":3,"sources":["shared/components/UIElements/Card.js","weapons/components/WeaponItem.js","weapons/components/WeaponsList.js","weapons/pages/UserWeapons.js"],"names":["Card","props","className","style","children","WeaponItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","footerClass","footer","Button","inverse","onClick","danger","padding","width","LoadingSpinner","asClearOverlay","src","image","alt","name","description","to","creatorId","href","userId","WeaponsList","items","map","weapon","imageUrl","address","creator","coordinates","location","onDeleteWeapon","UserWeapons","loadedUserWeapons","setLoadedUserWeapons","loadedUser","setLoadedUser","useParams","setTheUrlUserId","useEffect","responseData","users","find","user","fetchUser","userWeapons","fetchUserWeapons","weaponsList","length","deletedWeaponId","prevWeapons","filter","asDarkOverlay","big"],"mappings":"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","file":"static/js/7.48ee0892.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './WeaponItem.css';\r\n\r\nconst WeaponItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/weapons/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        { Authorization: 'Bearer ' + auth.token }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"weapon-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this weapon? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"weapon-item\">\r\n        <Card style={{ padding: 0, width: '40rem' }}>\r\n          {isLoading && <LoadingSpinner asClearOverlay />}\r\n          <div className=\"weapon-item__image\">\r\n            <img src={props.image} alt={props.name} />\r\n          </div>\r\n          <div className=\"weapon-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"weapon-item__actions\">\r\n            <Button inverse to={`/${props.creatorId}/weapons/view/${props.id}`}>\r\n              VIEW ATTRIBUTES\r\n            </Button>\r\n            <Button\r\n              inverse\r\n              href={`${process.env.REACT_APP_BACKEND_URL}/weapons/download/${props.creatorId}`}\r\n            >\r\n              DOWNLOAD\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/${props.creatorId}/weapons/${props.id}`}>\r\n                EDIT\r\n              </Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WeaponItem;\r\n","import React from 'react';\r\n\r\nimport WeaponItem from './WeaponItem';\r\nimport './WeaponsList.css';\r\n\r\nconst WeaponsList = (props) => {\r\n  return (\r\n    <ul className=\"weapons-list\">\r\n      {props.items.map((weapon) => (\r\n        <WeaponItem\r\n          key={weapon.id}\r\n          id={weapon.id}\r\n          image={weapon.imageUrl}\r\n          name={weapon.name}\r\n          description={weapon.description}\r\n          address={weapon.address}\r\n          creatorId={weapon.creator}\r\n          coordinates={weapon.location}\r\n          onDelete={props.onDeleteWeapon}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default WeaponsList;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport WeaponsList from '../components/WeaponsList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './WeaponForm.css';\r\n\r\nconst UserWeapons = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUserWeapons, setLoadedUserWeapons] = useState(['']);\r\n  const [loadedUser, setLoadedUser] = useState();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  auth.setTheUrlUserId(userId);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`\r\n        );\r\n        setLoadedUser(responseData.users.find((user) => user.id === userId));\r\n      } catch (err) {}\r\n    };\r\n    fetchUser();\r\n\r\n    const fetchUserWeapons = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/weapons/user/${userId}`\r\n        );\r\n        setLoadedUserWeapons(responseData.userWeapons);\r\n      } catch (err) {}\r\n    };\r\n    fetchUserWeapons();\r\n  }, [sendRequest, userId]);\r\n\r\n  const weaponDeleteHandler = (deletedWeaponId) => {\r\n    setLoadedUserWeapons((prevWeapons) =>\r\n      prevWeapons.filter((weapon) => weapon.id !== deletedWeaponId)\r\n    );\r\n  };\r\n\r\n  let weaponsList;\r\n\r\n  if (typeof loadedUserWeapons[0] !== 'string') {\r\n    if (loadedUserWeapons.length > 0) {\r\n      weaponsList = (\r\n        <WeaponsList\r\n          items={loadedUserWeapons}\r\n          onDeleteWeapon={weaponDeleteHandler}\r\n          userId={userId}\r\n        />\r\n      );\r\n    } else {\r\n      if (userId === auth.userId) {\r\n        weaponsList = (\r\n          <div className=\"weapons-list center\">\r\n            <Card>\r\n              <h2>No weapons found. Maybe create one ?</h2>\r\n              <Button to=\"/weapons/new\">Create New Weapon</Button>\r\n            </Card>\r\n          </div>\r\n        );\r\n      } else {\r\n        weaponsList = (\r\n          <div className=\"center\">\r\n            <Card>\r\n              <h2>This user didn't create any weapon yet.</h2>\r\n            </Card>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {!loadedUser && <ErrorModal error={error} onClear={clearError} />}\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asDarkOverlay big />\r\n        </div>\r\n      )}\r\n      <Button to=\"/\" className=\"new-weapon__create-btn\">\r\n        Back\r\n      </Button>\r\n      {weaponsList}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserWeapons;\r\n"],"sourceRoot":""}