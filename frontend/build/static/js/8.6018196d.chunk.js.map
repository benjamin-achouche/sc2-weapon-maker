{"version":3,"sources":["shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/charactersImages.js","shared/components/FormElements/Select.js","weapons/pages/NewWeapon.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialTouch","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","style","resize","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialValidity","formState","useCallback","inputData","formValidity","charactersImages","assassin","astaroth","berserker","cassandra","cervantes","charade","heihachi","inferno","ivy","kilik","link","lizardman","maxi","mitsurugi","necrid","nightmare","raphael","seungmina","siegfried","sophitia","spawn","taki","talim","voldo","xianghua","yoshimitsu","yunsung","selectReducer","Select","selectState","NewWeapon","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","character","name","description","inputHandler","useState","showCreateWeaponModal","setShowCreateWeaponModal","useWeapon","attack","defense","speed","selfGuardPiercing","enemyGuardPiercing","reach","counters","enemyDamageReflection","lifeContinuous","lifeHit","lifeVampire","lessHealthMoreAttack","lessHealthMoreDefense","lessHealthMoreSpeed","lessHealthMoreLifeCont","lessHealthSCLvUp","SCAttack","SCDefense","SCSpeed","SCEnemyGuardPiercing","SCLifeContinuous","SCChargeSpeed","SCType","weaponState","setLevelHandler","history","useHistory","cancelCreateWeaponHandler","weaponSubmitHandler","a","preventDefault","process","JSON","stringify","imageUrl","attributes","points","Authorization","token","push","userId","idCount","isSC","attribute","weaponAttributes","Fragment","ErrorModal","onClear","onSubmit","Modal","show","onCancel","header","footerClass","footer","LoadingSpinner","asDarkOverlay","Button","inverse","onClick","disabled","map","attr","Attribute","image","attributeValue","attrValues","currentLevel","levels","tooltip","lvlPtsCost"],"mappings":"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","file":"static/js/8.6018196d.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: props.initialTouch || false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={props.value || inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        style={{ resize: 'none' }}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      inputId: id,\r\n      value: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const assassin = 'https://i.ibb.co/r3KrBMh/astaroth.jpg';\r\nconst astaroth = 'https://i.ibb.co/r3KrBMh/astaroth.jpg';\r\nconst berserker = 'https://i.ibb.co/MPDLkQK/cassandra.jpg';\r\nconst cassandra = 'https://i.ibb.co/MPDLkQK/cassandra.jpg';\r\nconst cervantes = 'https://i.ibb.co/WFGkFrW/cervantes.jpg';\r\nconst charade = 'https://i.ibb.co/wLXCGMt/charade.jpg';\r\nconst heihachi = 'https://i.ibb.co/zf4vSh2/heihachi.jpg';\r\nconst inferno = 'https://i.ibb.co/vs04YVt/inferno.jpg';\r\nconst ivy = 'https://i.ibb.co/Yy28sq4/ivy.jpg';\r\nconst kilik = 'https://i.ibb.co/GJ3QS5g/kilik.jpg';\r\nconst link = 'https://i.ibb.co/47s7Lgd/link.jpg';\r\nconst lizardman = 'https://i.ibb.co/W5NSBz3/lizardman.jpg';\r\nconst maxi = 'https://i.ibb.co/549xmPT/maxi.jpg';\r\nconst mitsurugi = 'https://i.ibb.co/9nzPvK7/mitsurugi.jpg';\r\nconst necrid = 'https://i.ibb.co/KNC71n0/necrid.jpg';\r\nconst nightmare = 'https://i.ibb.co/hcnb0Pm/nightmare.jpg';\r\nconst raphael = 'https://i.ibb.co/qxFfhRg/raphael.jpg';\r\nconst seungmina = 'https://i.ibb.co/C7Zm1r3/seung-mina.jpg';\r\nconst siegfried = 'https://i.ibb.co/yydtsNy/siegfried.jpg';\r\nconst sophitia = 'https://i.ibb.co/SX2JZVy/sophitia.jpg';\r\nconst spawn = 'https://i.ibb.co/gzgRxjB/spawn.jpg';\r\nconst taki = 'https://i.ibb.co/93b9D8H/taki.jpg';\r\nconst talim = 'https://i.ibb.co/S7Pq2Tn/talim.jpg';\r\nconst voldo = 'https://i.ibb.co/gTRv8Yk/voldo.jpg';\r\nconst xianghua = 'https://i.ibb.co/30nQRXL/xianghua.jpg';\r\nconst yoshimitsu = 'https://i.ibb.co/hsMM6Hc/yoshimitsu.jpg';\r\nconst yunsung = 'https://i.ibb.co/ynrGcWz/yunsung.jpg';\r\n\r\nconst charactersImages = {\r\n  assassin: assassin,\r\n  astaroth: astaroth,\r\n  berserker: berserker,\r\n  cassandra: cassandra,\r\n  cervantes: cervantes,\r\n  charade: charade,\r\n  heihachi: heihachi,\r\n  inferno: inferno,\r\n  ivy: ivy,\r\n  kilik: kilik,\r\n  link: link,\r\n  lizardman: lizardman,\r\n  maxi: maxi,\r\n  mitsurugi: mitsurugi,\r\n  necrid: necrid,\r\n  nightmare: nightmare,\r\n  raphael: raphael,\r\n  seungmina: seungmina,\r\n  siegfried: siegfried,\r\n  sophitia: sophitia,\r\n  spawn: spawn,\r\n  taki: taki,\r\n  talim: talim,\r\n  voldo: voldo,\r\n  xianghua: xianghua,\r\n  yoshimitsu: yoshimitsu,\r\n  yunsung: yunsung,\r\n};\r\n\r\nexport default charactersImages;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Select.css';\r\n\r\nconst selectReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_SELECT':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case 'TOUCH':\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Select = (props) => {\r\n  const [selectState, dispatch] = useReducer(selectReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = selectState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const selectChangeHandler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE_SELECT',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const selectTouchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`select-control ${\r\n        !selectState.isValid &&\r\n        selectState.isTouched &&\r\n        'select-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.htmlFor}>{props.label}</label>\r\n\r\n      <select\r\n        id={props.id}\r\n        value={selectState.value}\r\n        onChange={selectChangeHandler}\r\n        onBlur={selectTouchHandler}\r\n      >\r\n        <option value=\"\"></option>\r\n        <option value=\"assassin\">Assassin</option>\r\n        <option value=\"astaroth\">Astaroth</option>\r\n        <option value=\"berserker\">Berserker</option>\r\n        <option value=\"cassandra\">Cassandra</option>\r\n        <option value=\"cervantes\">Cervantes</option>\r\n        <option value=\"charade\">Charade</option>\r\n        <option value=\"heihachi\">Heihachi</option>\r\n        <option value=\"inferno\">Inferno</option>\r\n        <option value=\"ivy\">Ivy</option>\r\n        <option value=\"kilik\">Kilik</option>\r\n        <option value=\"link\">Link</option>\r\n        <option value=\"lizardman\">Lizardman</option>\r\n        <option value=\"maxi\">Maxi</option>\r\n        <option value=\"mitsurugi\">Mitsurugi</option>\r\n        <option value=\"necrid\">Necrid</option>\r\n        <option value=\"nightmare\">Nightmare</option>\r\n        <option value=\"raphael\">Raphael</option>\r\n        <option value=\"seungmina\">Seung Mina</option>\r\n        <option value=\"siegfried\">Siegfried</option>\r\n        <option value=\"sophitia\">Sophitia</option>\r\n        <option value=\"spawn\">Spawn</option>\r\n        <option value=\"taki\">Taki</option>\r\n        <option value=\"talim\">Talim</option>\r\n        <option value=\"voldo\">Voldo</option>\r\n        <option value=\"xianghua\">Xianghua</option>\r\n        <option value=\"yoshimitsu\">Yoshimitsu</option>\r\n        <option value=\"yunsung\">Yunsung</option>\r\n      </select>\r\n      {!selectState.isValid && selectState.isTouched && (\r\n        <p>{props.errorText}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport weaponAttributes from '../util/weaponAttributes';\r\n\r\nimport charactersImages from '../../shared/util/charactersImages';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Select from '../../shared/components/FormElements/Select';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from '../../shared/util/validators';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Attribute from '../../shared/components/WeaponUIElements/Attribute';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useWeapon } from '../../shared/hooks/weapon-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './WeaponForm.css';\r\n\r\nconst NewWeapon = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      character: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      name: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const [showCreateWeaponModal, setShowCreateWeaponModal] = useState(false);\r\n\r\n  const [weaponState, setLevelHandler] = useWeapon(\r\n    {\r\n      attack: 4,\r\n      defense: 4,\r\n      speed: 3,\r\n      selfGuardPiercing: 7,\r\n      enemyGuardPiercing: 1,\r\n      reach: 2,\r\n      counters: 2,\r\n      enemyDamageReflection: 1,\r\n      lifeContinuous: 4,\r\n      lifeHit: 4,\r\n      lifeVampire: 1,\r\n      lessHealthMoreAttack: 1,\r\n      lessHealthMoreDefense: 1,\r\n      lessHealthMoreSpeed: 1,\r\n      lessHealthMoreLifeCont: 1,\r\n      lessHealthSCLvUp: 1,\r\n      SCAttack: 1,\r\n      SCDefense: 1,\r\n      SCSpeed: 3,\r\n      SCEnemyGuardPiercing: 1,\r\n      SCLifeContinuous: 3,\r\n      SCChargeSpeed: 3,\r\n      SCType: 2,\r\n    },\r\n    100\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const showCreateWeaponModalHandler = () => {\r\n    setShowCreateWeaponModal(true);\r\n  };\r\n\r\n  const cancelCreateWeaponHandler = () => {\r\n    setShowCreateWeaponModal(false);\r\n  };\r\n\r\n  const weaponSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/weapons`,\r\n        'POST',\r\n        JSON.stringify({\r\n          character: formState.inputs.character.value,\r\n          name: formState.inputs.name.value,\r\n          description: formState.inputs.description.value,\r\n          imageUrl: charactersImages[formState.inputs.character.value],\r\n          attributes: weaponState.attributes,\r\n          points: weaponState.points,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n\r\n      history.push(`/${auth.userId}/weapons`);\r\n    } catch (err) {}\r\n    setShowCreateWeaponModal(false);\r\n  };\r\n\r\n  const attributes = [];\r\n  let idCount = 0;\r\n  let isSC = false;\r\n\r\n  for (const attribute in weaponAttributes) {\r\n    idCount++;\r\n    if (idCount > 16) {\r\n      isSC = true;\r\n    }\r\n    attributes.push({\r\n      id: idCount,\r\n      name: attribute,\r\n      isSC: isSC,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form onSubmit={weaponSubmitHandler}>\r\n        <Modal\r\n          show={showCreateWeaponModal}\r\n          onCancel={cancelCreateWeaponHandler}\r\n          header=\"Please enter your weapon informations.\"\r\n          footerClass=\"weapon-item__modal-actions\"\r\n          footer={\r\n            <React.Fragment>\r\n              {isLoading && (\r\n                <div className=\"center\">\r\n                  <LoadingSpinner asDarkOverlay />\r\n                </div>\r\n              )}\r\n              <Button type=\"button\" inverse onClick={cancelCreateWeaponHandler}>\r\n                CANCEL\r\n              </Button>\r\n              <Button\r\n                onClick={weaponSubmitHandler}\r\n                disabled={!formState.isValid}\r\n              >\r\n                CREATE\r\n              </Button>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <Select\r\n            htmlFor=\"character-select\"\r\n            id=\"character\"\r\n            label=\"Select a character\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please select a character.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"name\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid weapon name.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (at least 5 characters).\"\r\n            onInput={inputHandler}\r\n          />\r\n        </Modal>\r\n        <Button\r\n          type=\"button\"\r\n          className=\"new-weapon__create-btn\"\r\n          onClick={showCreateWeaponModalHandler}\r\n        >\r\n          Create Weapon\r\n        </Button>\r\n      </form>\r\n      <div className=\"new-weapon__points\">\r\n        {weaponState.points} /{' '}\r\n        {weaponState.points > 100 ? weaponState.points : 100}\r\n      </div>\r\n      <div className=\"new-weapon\">\r\n        {attributes.map((attr) =>\r\n          !attr.isSC ? (\r\n            <Attribute\r\n              key={'Attribute ' + weaponAttributes[attr.name].name}\r\n              id={attr.id}\r\n              isSC={attr.isSC}\r\n              name={weaponAttributes[attr.name].name}\r\n              image={weaponAttributes[attr.name].image}\r\n              attributeValue={\r\n                weaponAttributes[attr.name].attributeValue[\r\n                  weaponState.attributes[attr.name] - 1\r\n                ]\r\n              }\r\n              attrValues={weaponAttributes[attr.name].attributeValue}\r\n              currentLevel={weaponState.attributes[attr.name]}\r\n              levels={weaponAttributes[attr.name].levels}\r\n              tooltip={weaponAttributes[attr.name].tooltip}\r\n              lvlPtsCost={weaponAttributes[attr.name].lvlPtsCost}\r\n              onClick={setLevelHandler}\r\n            />\r\n          ) : (\r\n            <Attribute\r\n              key={'Attribute ' + weaponAttributes[attr.name].name}\r\n              id={attr.id}\r\n              isSC={attr.isSC}\r\n              name={weaponAttributes[attr.name].name}\r\n              image={weaponAttributes[attr.name].image}\r\n              attributeValue={\r\n                weaponAttributes[attr.name].attributeValue[\r\n                  weaponState.attributes[attr.name] - 1\r\n                ]\r\n              }\r\n              attrValues={weaponAttributes[attr.name].attributeValue}\r\n              currentLevel={weaponState.attributes[attr.name]}\r\n              levels={weaponAttributes[attr.name].levels}\r\n              tooltip={weaponAttributes[attr.name].tooltip}\r\n              lvlPtsCost={weaponAttributes[attr.name].lvlPtsCost}\r\n              onClick={setLevelHandler}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewWeapon;\r\n"],"sourceRoot":""}